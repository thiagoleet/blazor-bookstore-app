@page "/users/login"
@inject IAuthenticateService authService

<h3>Login</h3>

<div class="card-body">
	<EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div class="form-group">
			<label for="email">Email Address</label>
			<InputText id="email" type="email" class="form-control" @bind-Value="RegistrationModel.Email" />
			<ValidationMessage For="@(() => RegistrationModel.Email)" />
		</div>

		<div class="form-group">
			<label for="password">Password</label>
			<InputText id="password" type="password" class="form-control" @bind-Value="RegistrationModel.Password" />
			<ValidationMessage For="@(() => RegistrationModel.Password)" />
		</div>

		<div class="form-group">
			<button type="submit" class="btn btn-primary btn-block">Login</button>
		</div>
	</EditForm>
</div>

@code {
	LoginUserDto LoginModel = new LoginUserDto();
	string message = string.Empty;

	private async Task HandleLogin()
	{
		try
		{
			var response = await authService.AuthenticateAsync(LoginModel);

			if (response)
			{

			}

			message = "Invalid Credentials";

		}
		catch (ApiException ex)
		{
			if (ex.StatusCode >= 200 && ex.StatusCode < 300)
			{

				return;
			}
			message = ex.Response;
		}
	}
}
